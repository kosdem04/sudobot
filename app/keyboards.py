from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardMarkup, InlineKeyboardButton)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
import app.database.requests as db



# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def select_role():
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üòÅ –ó–∞–∫–∞–∑—á–∏–∫",
                                callback_data="client"))
    kb.add(InlineKeyboardButton(text="üßë‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
                                callback_data="developer"))
    kb.adjust(2)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


"""

–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
----------------------------------------------------------------------------------------------
"""

# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞
client_main = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üîπ –ú–æ–∏ –∑–∞–∫–∞–∑—ã'),
     KeyboardButton(text='üí• –û—Ç–∫–ª–∏–∫–∏')],
    [KeyboardButton(text='‚è≥ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤'),
     KeyboardButton(text='üòÅ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')],
    [KeyboardButton(text='üíé FAQ'),
     KeyboardButton(text='üßë‚Äçüíª –°—Ç–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º')],
], resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
back = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')],],
                           resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –û—Ç–º–µ–Ω–∞
cancel = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')],],
                             resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ù–∞–∑–∞–¥ –∏ –û—Ç–º–µ–Ω–∞
back_and_cancel = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')],
                                                [KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')]],
                                      resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


sure = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üåü –î–∞'),
                                      KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')]],
                           resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


create_and_back = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ûï –°–æ–∑–¥–∞—Ç—å')],
                                                [KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')]],
                                      resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def client_orders(orders, page, total_pages):
    kb = InlineKeyboardBuilder()
    for order in orders:
        # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
        kb.add(InlineKeyboardButton(text=f"{order.title}",
                                    callback_data=f"order_{order.id}"))
    next_page = page + 1
    is_next = 0 if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-client-order_{page - 1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-client-order_{page + 1}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ –æ–Ω –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–≤–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞
client_order_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'),
     KeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑')],
    [KeyboardButton(text='üîπ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
     KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')],
], resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ –≤—Å–µ—Ö –æ—Ç–∫–ª–∏–∫–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞
async def order_total_response(order_id, total_response):
    kb = InlineKeyboardBuilder()
    if total_response == 0:
        kb.add(InlineKeyboardButton(text="–ù–µ—Ç –æ—Ç–∫–ª–∏–∫–æ–≤",
                                    callback_data="no_responses"))
    else:
        kb.add(InlineKeyboardButton(text=f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫–ª–∏–∫–∏ ({total_response})",
                                    callback_data=f"total-order-responses_{order_id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def order_total_response_pagination(orders, page, total_pages):
    kb = InlineKeyboardBuilder()
    for order in orders:
        total_response = await db.total_response(order.id)
        # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
        title = order.title if len(order.title) < 25 else f'{order.title[:25]}...'
        kb.add(InlineKeyboardButton(text=f"{title} (–û—Ç–∫–ª–∏–∫–∏: {total_response})",
                                    callback_data=f"{f'total-order-responses_{order.id}' if total_response > 0
                                    else 'no_responses'}"))
    next_page = page + 1
    is_next = 0 if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-responses-for-order_{page - 1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-responses-for-order_{page + 1}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def client_responses_for_order_pagination(responses, page, total_pages):
    kb = InlineKeyboardBuilder()
    for response in responses:
        # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
        title = response.description if len(response.description) < 35 else f'{response.description[:25]}...'
        kb.add(InlineKeyboardButton(text=f"{title}",
                                    callback_data=f'client-response-info_{response.id}'))
    next_page = page + 1
    is_next = 0 if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-client-response-info_{page - 1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-client-response-info_{page + 1}"))
    kb.add(InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤", callback_data="back_to_total_order_responses"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def back_to_total_order_responses():
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤", callback_data="back_to_total_order_responses"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç—É –≤ –æ—Ç–∫–ª–∏–∫–µ
async def client_response_menu(developer_username, response):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button1 = InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É", url=f"https://t.me/{developer_username}")
    button2 = InlineKeyboardButton(text="–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω", callback_data=f"choose-response_{response.id}")
    button3 = InlineKeyboardButton(text="–û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"refusal-response_{response.id}")
    button4 = InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="hide_client_response_info")

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
    kb.add(button1)
    if response.developer_rel.rating > 0:
        kb.row(InlineKeyboardButton(text="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ",
                                    callback_data=f"the-last-feedbacks-about-developer_{response.developer_rel.tg_id}"))
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button2, button3)

    kb.row(button4)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def sure_complete_order(response_id):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button2 = InlineKeyboardButton(text="üåü –î–∞", callback_data=f"order-complete_{response_id}")
    button3 = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel-order-complete_{response_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button2, button3)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def client_history_orders(orders, page, total_pages):
    kb = InlineKeyboardBuilder()
    for order in orders:
        # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
        kb.add(InlineKeyboardButton(text=f"{order.title}",
                                    callback_data=f"history-order_{order.id}"))
    next_page = page + 1
    is_next = 0 if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-client-history-order_{page - 1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-client-history-order_{page + 1}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def history_order_info(order):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    if not await db.is_feedback_about_developer(order.id):
        kb.add(InlineKeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å",
                                    callback_data=f"client-create-feedback_{order.id}"))
    else:
        kb.add(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤",
                                    callback_data=f"client-edit-feedback_{order.id}"))
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_history_order_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def client_feedback_info():
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_client_feedback_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def backs(object_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                                callback_data=f"back_{object_id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


"""

–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
----------------------------------------------------------------------------------------------
"""
# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
developer_main = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üí∞ –ë–∏—Ä–∂–∞'),
     KeyboardButton(text='üí•Ô∏è –ú–æ–∏ –æ—Ç–∫–ª–∏–∫–∏')],
    [KeyboardButton(text='üîπ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã'),
     KeyboardButton(text='üßë‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')],
    [KeyboardButton(text='üíé FAQ'),
     KeyboardButton(text='üòÅ –°—Ç–∞—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–æ–º')],
], resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# –º–µ–Ω—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
developer_profile = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='ü§ñ –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ')],
    [KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')]
], resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def select_tariff(tariff):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text=f"–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ",
                                callback_data=f"tariff_{tariff.id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
'''async def order_info(order_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text=f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                                callback_data=f"order-info_{order_id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()'''


async def all_orders_pagination(orders, page, total_pages):
    kb = InlineKeyboardBuilder()

    for order in orders:
        kb.add(InlineKeyboardButton(text=f"{order.title}",
                                    callback_data=f"order-info_{order.id}"))
    next_page = page + 1
    is_next = 0  if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-market-order_{page-1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-market-order_{page+1}"))
    kb.adjust(1)
    return kb.as_markup()


async def back_from_order_info():
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                                callback_data="back_from_order_info"))
    kb.adjust(1)
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def market_order_info():
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_market_order_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è' –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑
async def make_response(order):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    if order.client_rel.rating > 0:
        kb.add(InlineKeyboardButton(text="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã –æ –∑–∞–∫–∞–∑—á–∏–∫–µ",
                                    callback_data=f"the-last-feedbacks-about-client_{order.client_rel.tg_id}"))
    kb.add(InlineKeyboardButton(text="–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è",
                                callback_data=f"make-response_{order.id}"))
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_market_order_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def delete_response(response_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –æ—Ç–∫–ª–∏–∫",
                                callback_data=f"delete-response_{response_id}"))
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_developer_response_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def sure_delete_response(response_id):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button2 = InlineKeyboardButton(text="üåü –î–∞", callback_data=f"ok-delete-response_{response_id}")
    button3 = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel-delete-response_{response_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button2, button3)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


async def completed_orders_pagination(orders, page, total_pages):
    kb = InlineKeyboardBuilder()

    for order in orders:
        kb.add(InlineKeyboardButton(text=f"{order.title}",
                                    callback_data=f"completed-order-info_{order.id}"))
    next_page = page + 1
    is_next = 0  if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-completed-order_{page-1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-completed-order_{page+1}"))
    kb.adjust(1)
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def completed_orders_menu(order_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                                callback_data=f"completed-order-info_{order_id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async def completed_order_info(order):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    if not await db.is_feedback_about_client(order.id):
        kb.add(InlineKeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å",
                                    callback_data=f"developer-create-feedback_{order.id}"))
    else:
        kb.add(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤",
                                    callback_data=f"developer-edit-feedback_{order.id}"))
    kb.add(InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å",
                                callback_data="hide_completed_order_info"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def developer_responses_pagination(responses, page, total_pages):
    kb = InlineKeyboardBuilder()
    for response in responses:
        # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
        kb.add(InlineKeyboardButton(text=f"{response.description}",
                                    callback_data=f"developer-response-info_{response.id}"))
    next_page = page + 1
    is_next = 0 if next_page > total_pages else 1
    if page > 1:
        kb.add(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev-developer-responses_{page - 1}"))
    if is_next == 1:
        kb.add(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next-developer-responses_{page + 1}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def free_payment(tariff_id):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button = InlineKeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data=f"free-payment_{tariff_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


"""

–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
----------------------------------------------------------------------------------------------
"""
# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
async def order_moderation(order_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="‚úÖ –†–∞–∑—Ä–µ—à–∏—Ç—å",
                                callback_data=f"moderation-passed_{order_id}"))
    kb.add(InlineKeyboardButton(text="‚õî –ó–∞–ø—Ä–µ—Ç–∏—Ç—å",
                                callback_data=f"moderation-failed_{order_id}"))
    kb.adjust(2)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async def developer_moderation(developer_id):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text="‚úÖ –†–∞–∑—Ä–µ—à–∏—Ç—å",
                                callback_data=f"moderation-passed_{developer_id}"))
    kb.add(InlineKeyboardButton(text="‚õî –ó–∞–ø—Ä–µ—Ç–∏—Ç—å",
                                callback_data=f"moderation-failed_{developer_id}"))
    kb.adjust(2)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞
admin_panel = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='ü§ñ –¢–∞—Ä–∏—Ñ—ã'),
     KeyboardButton(text='‚úçÔ∏è –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')],
    [KeyboardButton(text='‚óÄÔ∏è –í—ã–π—Ç–∏')],
], resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def tariff_menu(tariff):
    kb = InlineKeyboardBuilder()
    # –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Inline –∫–Ω–æ–ø–∫—É
    kb.add(InlineKeyboardButton(text=f"–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                                callback_data=f"admin-edit-tariff_{tariff.id}"))
    kb.add(InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                                callback_data=f"admin-delete-tariff_{tariff.id}"))
    kb.adjust(1)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


tariffs_menu = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ')],
                                                [KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')]],
                                      resize_keyboard=True)  # –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def sure_delete_tariff(tariff_id):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button2 = InlineKeyboardButton(text="üåü –î–∞", callback_data=f"ok-delete-tariff_{tariff_id}")
    button3 = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel-delete-tariff_{tariff_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button2, button3)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Inline –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def sendall_methods():
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    button1 = InlineKeyboardButton(text="üí• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º", callback_data="sendall_1")
    button2 = InlineKeyboardButton(text="üòÅ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–∞–º", callback_data="sendall_2")
    button3 = InlineKeyboardButton(text="üßë‚Äçüíª –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º", callback_data="sendall_3")

    kb.add(button1)
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    kb.row(button2, button3)
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    return kb.as_markup()